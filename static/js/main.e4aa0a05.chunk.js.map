{"version":3,"sources":["components/Footer/Footer.tsx","routePatterns.tsx","utils.ts","components/CountdownForm/CountdownForm.tsx","components/CountdownCreate/CountdownCreate.tsx","components/CountdownView/CountdownView.tsx","components/Countdown/Countdown.tsx","components/AppNav/AppNav.tsx","components/App/App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","root","textAlign","Footer","props","restProps","classes","Container","className","Typography","color","variant","component","Link","href","title","newCountdown","countdown","SECOND","MINUTE","HOUR","DAY","countdownPath","params","to","from","toDate","Date","undefined","entries","toISOString","toString","filter","entry","routePatterns","URLSearchParams","theme","display","flexDirection","alignItems","justifyContent","margin","spacing","datetimeContainer","alignContent","flexWrap","date","flexGrow","time","submit","CountdownForm","titleProps","dateProps","timeProps","submitProps","TextField","label","utils","DateFnsUtils","DatePicker","inputVariant","format","InputLabelProps","shrink","TimePicker","Button","CountdownCreate","location","useLocation","history","useHistory","useState","setTitle","NaN","timestamp","setTimestamp","datetime","useMemo","isNaN","newLocation","setSearchParam","useCallback","key","value","newSearch","search","set","delete","replace","handleTitleChange","target","handleDatetimeAccept","ts","getTime","useEffect","document","forEach","parseInt","onChange","disabled","unitMinWidth","unitSpacing","padding","unitsContainer","unitContainer","unit","minWidth","unitHeader","unitValue","unitTitle","CountdownView","includeMilliseconds","useTheme","colSize","maxCols","useMediaQuery","breakpoints","up","lastIndexOf","milliseconds","seconds","Math","floor","minutes","hours","days","units","push","cols","firstNonZeroIndex","findIndex","slice","min","length","GridList","cellHeight","style","width","map","GridListTile","Card","elevation","CardHeader","subheader","FREQUENT_THRESHOLD","FREQUENT","INFREQUENT","Countdown","updateIntervalControlled","updateInterval","titleSet","finishHandlers","finishHandlersSet","finishTime","finishTimeSet","finished","finishedSet","countdownSet","started","finishTimeNew","now","titleNew","finishHandlersNew","parse","window","handle","setInterval","millisecondsLeft","handler","clearInterval","defaultProps","toolbar","mixins","navItem","AppNav","LinkProps","linkProps","items","icon","Add","getUrl","role","aria-label","getFullYear","tomorrow","setDate","getDate","getMonth","Divider","List","ListItem","button","ListItemIcon","ListItemText","position","minHeight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","nav","contentRoot","content","footer","App","sMobileDrawerOpen","setMobileDrawerOpen","closeDrawer","openDrawer","isMobileScreen","down","appNav","onClick","basename","process","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Menu","noWrap","Drawer","paper","open","anchor","onClose","ChevronLeft","path","exact","strict","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4aa0a05.chunk.js","sourcesContent":["import React from 'react'\nimport {Typography, Link, Container, makeStyles} from '@material-ui/core'\nimport {ContainerProps} from '@material-ui/core/Container'\n\n//noinspection TypeScriptValidateTypes\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n  },\n})\n\nexport interface AppFooterProps extends ContainerProps {\n\n}\n\nfunction Footer(props: AppFooterProps) {\n  const {...restProps} = props\n\n  const classes = useStyles(props)\n\n  return (\n    <Container className={classes.root} {...restProps}>\n      <Typography color='textSecondary' variant='caption' component='div'>\n        {'Made with ❤️ by '}\n        <Link color='textSecondary' href='https://github.com/OkThought'>Ivan</Link>\n      </Typography>\n      <Typography color='textSecondary' variant='caption' component='div'>\n        {'Icons made by '}\n        <Link color='textSecondary' href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</Link>\n        {' from '}\n        <Link color='textSecondary' href=\"https://www.flaticon.com/\" title=\"Flaticon\">flaticon.com</Link>\n      </Typography>\n    </Container>\n  )\n}\n\nexport default Footer\n","export default {\n  newCountdown: '/new',\n  countdown: '/',\n}\n","import routePatterns from './routePatterns'\n\nexport type PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport const SECOND = 1000\nexport const MINUTE = 60 * SECOND\nexport const HOUR = 60 * MINUTE\nexport const DAY = 24 * HOUR\n\nexport function dateWithoutTime(date?: Date) {\n  const result = date ? new Date(date) : new Date()\n  result.setHours(12, 0, 0, 0)\n  return result\n}\n\nexport function pad(num: number, places: number, character = '0') {\n  return String(num).padStart(places, character)\n}\n\nexport const DATE_DELIMITER = '\\u002D'\n\nexport function formatDate(date: Date) {\n  return [\n    pad(date.getFullYear(), 4),\n    pad(date.getMonth(), 2),\n    pad(date.getDate(), 2),\n  ].join(DATE_DELIMITER)\n}\n\nexport const TIME_DELIMITER = '\\u003A'\n\nexport function formatTime(date: Date) {\n  return [\n    pad(date.getHours(), 2),\n    pad(date.getMinutes(), 2),\n    pad(date.getSeconds(), 2),\n  ].join(TIME_DELIMITER)\n}\n\nexport function parseYMD(value: string): [number, number, number] {\n  return value.split(DATE_DELIMITER, 3).map(i => parseInt(i, 10)) as [number, number, number]\n}\n\nexport function parseHMS(value: string): [number, number, number] {\n  return value.split(TIME_DELIMITER, 3).map(i => parseInt(i, 10)) as [number, number, number]\n}\n\nexport type CountdownUrlParams = {\n  to?: Date | number | string\n  from?: number\n  title?: string\n}\n\nexport function countdownPath(params: CountdownUrlParams) {\n  const {\n    to,\n    from,\n    title,\n  } = params\n\n  const toDate = to ? to instanceof Date ? to : new Date(to) : undefined\n  const entries = [\n    toDate ? ['to', toDate.toISOString()] : undefined,\n    from ? ['from', from.toString()] : undefined,\n    title ? ['title', title] : undefined,\n  ].filter((entry): entry is [string, string] => entry !== undefined)\n  return `${routePatterns.countdown}?${new URLSearchParams(entries)}`\n}\n","import React, {ReactNode} from 'react'\nimport {TextField, Button, makeStyles, Theme} from '@material-ui/core'\nimport {OutlinedTextFieldProps} from '@material-ui/core/TextField'\nimport {ButtonProps} from '@material-ui/core/Button'\nimport {MuiPickersUtilsProvider, TimePicker, DatePicker, DatePickerProps, TimePickerProps} from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nexport interface CountdownFormProps {\n  titleProps: Partial<OutlinedTextFieldProps>\n  dateProps: DatePickerProps\n  timeProps: TimePickerProps\n  submit?: ReactNode\n  submitProps?: ButtonProps\n}\n\n//noinspection TypeScriptValidateTypes\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n  },\n  title: {\n    margin: theme.spacing(.5),\n  },\n  datetimeContainer: {\n    display: 'flex',\n    alignItems: 'stretch',\n    alignContent: 'stretch',\n    flexWrap: 'wrap',\n  },\n  date: {\n    margin: theme.spacing(.5),\n    flexGrow: 1,\n  },\n  time: {\n    margin: theme.spacing(.5),\n    flexGrow: 1,\n  },\n  submit: {\n    margin: theme.spacing(.5),\n  },\n}))\n\nfunction CountdownForm(props: CountdownFormProps) {\n  const {\n    titleProps,\n    dateProps,\n    timeProps,\n    submitProps = {},\n    submit,\n  } = props\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        {...{\n          className: classes.title,\n          variant: 'outlined',\n          label: 'Title',\n          ...titleProps,\n        }}\n      />\n      <div className={classes.datetimeContainer}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DatePicker\n            {...{\n              className: classes.date,\n              inputVariant: 'outlined',\n              variant: 'dialog',\n              label: 'Date',\n              format: 'yyyy MMMM do',\n              InputLabelProps: {\n                shrink: true,\n              },\n              ...dateProps,\n            }}\n          />\n          <TimePicker\n            {...{\n              className: classes.time,\n              inputVariant: 'outlined',\n              variant: 'dialog',\n              label: 'Time',\n              InputLabelProps: {\n                shrink: true,\n              },\n              ...timeProps,\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </div>\n      {submit || (\n        <Button\n          {...{\n            className: classes.submit,\n            ...submitProps,\n          }}\n        >\n          Start\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default CountdownForm\n","import React, {useState, useEffect, useCallback, useMemo, ChangeEvent} from 'react'\nimport {countdownPath} from '../../utils'\nimport CountdownForm, {CountdownFormProps} from '../CountdownForm/CountdownForm'\nimport {useLocation, useHistory, Link} from 'react-router-dom'\nimport {Button} from '@material-ui/core'\nimport {MaterialUiPickersDate} from '@material-ui/pickers/typings/date'\n\ntype omitKeys =\n  | 'titleProps'\n  | 'dateProps'\n  | 'timeProps'\n  | 'submitProps'\n\nexport interface CountdownCreateProps extends Omit<CountdownFormProps, omitKeys> {\n\n}\n\nfunction CountdownCreate(props: CountdownCreateProps) {\n  const {...restProps} = props\n  const location = useLocation()\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [timestamp, setTimestamp] = useState<number>(NaN)\n\n  const datetime = useMemo(() => isNaN(timestamp) ? null : new Date(timestamp), [timestamp])\n\n  const newLocation = useMemo(() => {\n    return datetime === null ? undefined : countdownPath({to: datetime, title})\n  }, [datetime, title])\n\n  const setSearchParam = useCallback((key: string, value: string) => {\n    const newSearch = new URLSearchParams(location.search)\n    if (value) {\n      newSearch.set(key, value)\n    } else {\n      newSearch.delete(key)\n    }\n    history.location.search = newSearch.toString()\n    history.replace(history.location)\n  }, [history, location])\n\n  const handleTitleChange = useCallback(({target: {value}}: ChangeEvent<HTMLInputElement>) => {\n    setTitle(value)\n    setSearchParam('title', value)\n  }, [setSearchParam])\n\n  const handleDatetimeAccept = useCallback((date: MaterialUiPickersDate | null) => {\n    const ts = date ? date.getTime() : NaN\n    setTimestamp(ts)\n    setSearchParam('tots', isNaN(ts) ? '' : ts.toString())\n  }, [setSearchParam])\n\n  useEffect(() => {\n    document.title = title || 'New Countdown'\n  }, [title])\n\n  useEffect(() => {\n    let ts = NaN\n    let title = ''\n    new URLSearchParams(location.search).forEach((value, key) => {\n      if (key === 'tots') {\n        ts = parseInt(value, 10) || ts\n      } else if (key === 'title') {\n        title = value\n      }\n    })\n    setTitle(title)\n    setTimestamp(ts)\n  }, [location.search])\n\n  return (\n    <CountdownForm\n      titleProps={{\n        value: title,\n        onChange: handleTitleChange,\n      }}\n      dateProps={{\n        value: datetime,\n        onChange: handleDatetimeAccept,\n      }}\n      timeProps={{\n        value: datetime,\n        onChange: handleDatetimeAccept,\n      }}\n      submit={newLocation === undefined ?\n        <Button disabled>Start</Button>\n        :\n        <Button\n          component={Link}\n          to={newLocation}\n        >\n          Start\n        </Button>\n      }\n      {...restProps}\n    />\n  )\n}\n\nexport default CountdownCreate\n","import React, {useMemo} from 'react'\nimport {\n  Typography,\n  makeStyles,\n  Theme,\n  Card,\n  CardHeader,\n  GridList,\n  GridListTile,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core'\nimport {SECOND, MINUTE, HOUR, DAY} from '../../utils'\nimport {GridListTileProps} from '@material-ui/core/GridListTile'\n\nconst unitMinWidth = 100\nconst unitSpacing = 1\n\n//noinspection TypeScriptValidateTypes\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    padding: theme.spacing(.5),\n  },\n  unitsContainer: {\n    justifyContent: 'center',\n  },\n  unitContainer: {\n    padding: theme.spacing(unitSpacing),\n  },\n  unit: {\n    // height: '100%',\n    // width: '100%',\n    minWidth: unitMinWidth,\n  },\n  unitHeader: {\n    padding: theme.spacing(0),\n  },\n  unitValue: {\n    // margin: theme.spacing(.5),\n  },\n  unitTitle: {\n    // margin: theme.spacing(.5),\n  },\n}))\n\nexport interface CountdownViewProps {\n  countdown: number\n  title?: string\n  includeMilliseconds?: boolean\n}\n\ntype Unit = {key: string, title: string, value: number} & Partial<GridListTileProps>\nexport function CountdownView(props: CountdownViewProps) {\n  const {\n    countdown,\n    title,\n    includeMilliseconds = false,\n  } = props\n\n  const theme = useTheme()\n  const colSize = useMemo(() => unitMinWidth + theme.spacing(unitSpacing), [theme])\n  const fitCols = [\n    useMediaQuery(theme.breakpoints.up(colSize)),\n    useMediaQuery(theme.breakpoints.up(colSize * 2)),\n    useMediaQuery(theme.breakpoints.up(colSize * 3)),\n    useMediaQuery(theme.breakpoints.up(colSize * 4)),\n    useMediaQuery(theme.breakpoints.up(colSize * 5)),\n  ]\n  const maxCols = fitCols.lastIndexOf(true) + 1\n  const milliseconds = useMemo(() => countdown % SECOND, [countdown])\n  const seconds = useMemo(() => Math.floor(countdown % MINUTE / SECOND), [countdown])\n  const minutes = useMemo(() => Math.floor(countdown % HOUR / MINUTE), [countdown])\n  const hours = useMemo(() => Math.floor(countdown % DAY / HOUR), [countdown])\n  const days = useMemo(() => Math.floor(countdown / DAY), [countdown])\n  const units = useMemo(() => {\n    const units: Unit[] = [\n      {key: 'days', title: 'days', value: days},\n      {key: 'hours', title: 'hours', value: hours},\n      {key: 'minutes', title: 'minutes', value: minutes},\n      {key: 'seconds', title: 'seconds', value: seconds},\n    ]\n\n    if (includeMilliseconds) {\n      units.push({\n        key: 'milliseconds',\n        title: 'milliseconds',\n        value: milliseconds,\n        cols: maxCols === 5 ? 1 : maxCols === 3 ? 2 : maxCols\n      })\n    }\n    const firstNonZeroIndex = units.findIndex(unit => unit.value !== 0)\n    return firstNonZeroIndex === -1 ? [] : units.slice(firstNonZeroIndex)\n  }, [days, hours, includeMilliseconds, maxCols, milliseconds, minutes, seconds])\n\n  const cols = useMemo(() => maxCols === 3 ? 2 : Math.min(maxCols, units.length), [maxCols, units.length])\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root}>\n      {title && (\n        <Typography className={classes.title} variant='h5' component='div'>\n          {title}\n        </Typography>\n      )}\n      <GridList\n        className={classes.unitsContainer}\n        cellHeight='auto'\n        spacing={0}\n        cols={cols}\n        style={{width: unitMinWidth * cols}}\n      >\n        {units.map(unit => {\n          const {value, title, key, ...restProps} = unit\n\n          return (\n            <GridListTile key={key} className={classes.unitContainer} {...restProps}>\n              <Card className={classes.unit} elevation={0}>\n                <CardHeader\n                  title={value}\n                  subheader={title}\n                  classes={{\n                    root: classes.unitHeader,\n                    title: classes.unitValue,\n                    subheader: classes.unitTitle,\n                  }}\n                />\n              </Card>\n            </GridListTile>\n          )\n        })}\n      </GridList>\n    </div>\n  )\n}\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {CountdownView} from '../CountdownView/CountdownView'\nimport {SECOND} from '../../utils'\nimport {useLocation} from 'react-router-dom'\n\nexport interface CountdownProps {\n  updateInterval?: number\n}\n\nconst FREQUENT_THRESHOLD = 10 * SECOND\nconst FREQUENT = SECOND / 20\nconst INFREQUENT = SECOND / 2\n\nfunction Countdown(props: CountdownProps) {\n  const {\n    updateInterval: updateIntervalControlled,\n  } = props\n\n  const location = useLocation()\n\n  const [title, titleSet] = useState('')\n  const [finishHandlers, finishHandlersSet] = useState<Array<() => void>>([])\n  const [finishTime, finishTimeSet] = useState(-1)\n  const [finished, finishedSet] = useState(false)\n  const [countdown, countdownSet] = useState<number>(0)\n\n  const updateInterval = useMemo(() => {\n    return updateIntervalControlled !== undefined ? updateIntervalControlled :\n      countdown > FREQUENT_THRESHOLD ? INFREQUENT : FREQUENT\n  }, [updateIntervalControlled, countdown])\n\n  const includeMilliseconds = useMemo(() => updateInterval === FREQUENT, [updateInterval])\n  const started = useMemo(() => finishTime > 0, [finishTime])\n\n  useEffect(() => {\n    let finishTimeNew = Date.now()\n    let titleNew = ''\n    const finishHandlersNew = [\n      () => finishedSet(true),\n      () => countdownSet(0),\n    ]\n    new URLSearchParams(location.search).forEach((value, key) => {\n      if (key === 'to') {\n        finishTimeNew = Date.parse(value)\n      } else if (key === 'from') {\n        const milliseconds = parseInt(value, 10)\n        if (!isNaN(milliseconds)) {\n          finishTimeNew = Date.now() + milliseconds\n        }\n      } else if (key === 'title') {\n        titleNew = value\n      } else if (key === 'finish_title') {\n        finishHandlersNew.push(() => titleSet(value))\n      } else if (key === 'finish_redirect') {\n        finishHandlersNew.push(() => {\n          window.location.href = value\n        })\n      }\n    })\n    finishTimeSet(finishTimeNew)\n    titleSet(titleNew)\n    finishHandlersSet(finishHandlersNew)\n    finishedSet(false)\n  }, [location.search])\n\n  useEffect(() => {\n    if (started && !finished) {\n      const handle = setInterval(() => {\n        const millisecondsLeft = finishTime - Date.now()\n        if (millisecondsLeft <= 0) {\n          for (const handler of finishHandlers) {\n            handler()\n          }\n        } else {\n          countdownSet(millisecondsLeft)\n        }\n      }, updateInterval)\n      return () => clearInterval(handle)\n    }\n  }, [countdownSet, updateInterval, finished, finishTime, finishHandlers, countdown, started])\n\n  useEffect(() => {\n    document.title = title || 'Countdown'\n  }, [title])\n\n  return (!started ? null :\n    <CountdownView\n      title={title}\n      countdown={countdown}\n      includeMilliseconds={includeMilliseconds}\n    />\n  )\n}\n\nCountdown.defaultProps = {\n  variant: 'subtitle1',\n  component: 'div',\n} as Partial<CountdownProps>\n\nexport default Countdown\n","import React, {useMemo, Key, HTMLProps} from 'react'\nimport {makeStyles, Theme, Divider, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\nimport {Add as AddIcon} from '@material-ui/icons'\nimport {countdownPath, MINUTE} from '../../utils'\nimport {Link, LinkProps} from 'react-router-dom'\nimport routePatterns from '../../routePatterns'\nimport {ListItemIconProps} from '@material-ui/core/ListItemIcon'\n\n//noinspection TypeScriptValidateTypes\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  navItem: {\n    color: 'inherit',\n    margin: theme.spacing(0.5),\n  },\n}))\n\ntype NavItem = {\n  key?: Key\n  label: string\n  icon: ListItemIconProps['children']\n  getUrl: () => string\n}\n\nexport interface AppNavProps extends HTMLProps<HTMLDivElement> {\n  LinkProps?: Partial<LinkProps>\n}\n\nfunction AppNav(props: AppNavProps) {\n  const {\n    LinkProps: linkProps = {},\n    ...restProps\n  } = props\n\n  const items = useMemo<NavItem[]>(() => [{\n    label: 'New',\n    icon: <AddIcon/>,\n    getUrl: () => routePatterns.newCountdown,\n  }, {\n    label: 'New Year',\n    icon: <span role='img' aria-label='new year'>🎄</span>,\n    getUrl: () => countdownPath({\n      to: new Date(new Date().getFullYear() + 1, 0, 1, 0, 0, 0, 0),\n      title: 'New Year 🎄',\n    }),\n  }, {\n    label: 'Midnight',\n    icon: <span role='img' aria-label='midnight'>🌙</span>,\n    getUrl: () => {\n      const tomorrow = new Date()\n      tomorrow.setDate(tomorrow.getDate() + 1)\n      return countdownPath({\n        to: new Date(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate(), 0, 0, 0, 0),\n        title: 'Midnight 🌙',\n      })\n    },\n  }, {\n    label: '5 minutes',\n    icon: <span role='img' aria-label='5 minutes'>5️⃣</span>,\n    getUrl: () => countdownPath({\n      from: 5 * MINUTE,\n      title: '5 minutes',\n    }),\n  }], [])\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root} {...restProps}>\n      <div className={classes.toolbar}/>\n      <Divider/>\n      <List>\n        {items.map(({label, key = label, icon, getUrl}) =>\n          <ListItem button key={key} component={Link} to={getUrl} {...linkProps}>\n            <ListItemIcon>\n              {icon}\n            </ListItemIcon>\n            <ListItemText>\n              {label}\n            </ListItemText>\n          </ListItem>,\n        )}\n      </List>\n    </div>\n  )\n}\n\nAppNav.defaultProps = {\n  position: 'sticky',\n} as Partial<AppNavProps>\n\nexport default AppNav\n","import {\n  makeStyles,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  Theme,\n  Typography,\n  useMediaQuery,\n  useTheme, CssBaseline, Divider,\n} from '@material-ui/core'\nimport {\n  ChevronLeft as ChevronLeftIcon,\n} from '@material-ui/icons'\nimport React, {useEffect, useState, useMemo} from 'react'\nimport Footer from '../Footer/Footer'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport CountdownCreate from '../CountdownCreate/CountdownCreate'\nimport Countdown from '../Countdown/Countdown'\nimport AppNav from '../AppNav/AppNav'\nimport routePatterns from '../../routePatterns'\nimport {Menu as MenuIcon} from '@material-ui/icons'\nimport clsx from 'clsx'\n\nconst drawerWidth = 240\n\n//noinspection TypeScriptValidateTypes\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(['width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(['width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: 0,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7) + 1,\n    },\n  },\n  nav: {\n    display: 'flex',\n  },\n  contentRoot: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  content: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  footer: {\n    flexShrink: 0,\n  },\n}))\n\nfunction App(props: {}) {\n  const classes = useStyles(props)\n\n  const [sMobileDrawerOpen, setMobileDrawerOpen] = useState(false)\n\n  const closeDrawer = () => setMobileDrawerOpen(false)\n  const openDrawer = () => setMobileDrawerOpen(true)\n\n  const theme = useTheme()\n  const isMobileScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const drawerOpen = useMemo(() => (\n    !isMobileScreen || sMobileDrawerOpen\n  ), [isMobileScreen, sMobileDrawerOpen])\n\n  useEffect(() => {\n    document.title = 'Countdown'\n  })\n\n  const appNav = <AppNav LinkProps={{onClick: closeDrawer}}/>\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <CssBaseline/>\n      <div className={classes.root}>\n        <AppBar className={clsx(classes.appBar, {[classes.appBarShift]: drawerOpen})}>\n          <Toolbar>\n            <IconButton\n              color='inherit'\n              edge='start'\n              onClick={openDrawer}\n              className={clsx({[classes.hide]: drawerOpen})}\n            >\n              <MenuIcon/>\n            </IconButton>\n            <Typography variant='h6' noWrap>\n              Countdown\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: drawerOpen,\n            [classes.drawerClose]: !drawerOpen,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: drawerOpen,\n              [classes.drawerClose]: !drawerOpen,\n            }),\n          }}\n          open={drawerOpen}\n          variant='permanent'\n          anchor='left'\n          onClose={openDrawer}\n        >\n          <div className={classes.toolbar}>\n            <IconButton\n              className={clsx({[classes.hide]: !isMobileScreen || !sMobileDrawerOpen})}\n              onClick={closeDrawer}\n            >\n              <ChevronLeftIcon/>\n            </IconButton>\n          </div>\n          <Divider/>\n          {appNav}\n        </Drawer>\n        <div className={classes.contentRoot}>\n          <div className={classes.content}>\n            <Switch>\n              <Route path={routePatterns.newCountdown} exact strict>\n                <CountdownCreate/>\n              </Route>\n              <Route path={routePatterns.countdown} exact strict>\n                <Countdown/>\n              </Route>\n            </Switch>\n          </div>\n          <Footer className={classes.footer}/>\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register()\n} else {\n  serviceWorker.unregister()\n}\n"],"sourceRoot":""}